@model VisualiserWebProject.Models.Test

@{
    ViewBag.Title = "Add New Test";
}

<h2>Add New Test</h2>
@{
    IEnumerable<VisualiserWebProject.Models.TestFileHelper> testReport = ViewData["TestReport"] as IEnumerable<VisualiserWebProject.Models.TestFileHelper>;
}
@using (Html.BeginForm("AddNewTest", "Main", FormMethod.Post, new { encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()



    @* Other Fields: moduleID, testTitle, testType, testDate  *@
    @* Determined in methods: totalAttempts, uniqueAttempts, averageMark, uploadDate, assessor *@
    <div id="uploadFilesForm" class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ModuleID, "ModuleID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ModuleID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ModuleID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.testTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.testTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.testTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.testType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.testType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.testType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.testDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.testDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.testDate, "", new { @class = "text-danger" })
            </div>
        </div>
        @* File Upload Area *@

        <!--  <h4>Upload the test questions with answer key:</h4>
        <div class="form-group">
            <div class="col-md-10">
                <input type="file" id="testQuestions" runat="server" ToolTip="CSV (.csv) files only." />
            </div>
        </div>-->

        <h4>Upload the test report from Moodle:</h4>
        <div class="form-group">
            @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(x => x.File, new { type = "file" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>

    <!-- TODO: Insert data grid & Confirm Button -> separate page(?) -->

}


<h1>File Preview</h1>

<p>
    @Html.ActionLink("Submit File", "Submit")
</p>

<table id="fileViewer" class="table">

    @foreach (VisualiserWebProject.Models.TestFileHelper item in testReport)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Surname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Mark)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuestionResult)
            </td>
        </tr>
    }
</table>